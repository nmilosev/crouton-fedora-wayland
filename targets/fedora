#!/bin/sh -e
# Copyright (c) 2019 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
REQUIRES=''
DESCRIPTION='Performs a Fedora (CLI) installation with Wayland support.'
CHROOTBIN='croutonpowerd croutonversion host-dbus croutoncycle croutontriggerd croutonnotify volume crouton-noroot croutonfindnacl startxwayland'

. "${TARGETSDIR:="$PWD"}/common"

### Append to prepare.sh:
echo 'Preparing environment...' 1>&2
if [ ! "$VERSION" = '#VERSION#' ]; then
    sed -e "s ^VERSION=.*\$ VERSION='$VERSION' ;" \
        -e "s ^RELEASE=.*\$ RELEASE='$RELEASE' ;" \
        -e "s ^ARCH=.*\$ ARCH='$ARCH' ;" \
        -i '/usr/local/bin/croutonversion'
fi

# Create the new environment file
oldenv='/etc/environment'
newenv='/etc/environment.new'
{
    echo '### begin crouton-generated environment variables'
    if [ "$PROXY" = 'unspecified' -o "$PROXY" = '#PROXY#' ]; then
        # Copy over previously generated content
        awk '/^### end/ { exit }
             x && tolower($0) ~ /^[a-z]*_proxy=/
             /^### begin/ { x=1 }' "$oldenv" 2>/dev/null || true
    elif [ -n "$PROXY" ]; then
        for var in http_proxy HTTP_PROXY https_proxy HTTPS_PROXY \
                   ftp_proxy FTP_PROXY; do
            echo "$var='$PROXY'"
        done
        for var in no_proxy NO_PROXY; do
            echo "$var='localhost,127.0.0.1'"
        done
    fi
    echo '### end crouton-generated environment variables'
} > "$newenv"

# Set proxy variables for this script
. "$newenv"
export http_proxy https_proxy ftp_proxy

# Copy in previous user-environment settings
if [ -r "$oldenv" ]; then
    awk '/^### begin/{x=1}!x;/^### end/{x=0}' "$oldenv" >> "$newenv"
fi
mv -f "$newenv" "$oldenv"

# On release upgrade, keyboard-configuration might be reconfigured.
fixkeyboardmode

# Generate and set default locale
if [ ! -f '/etc/default/locale' ] && hash locale-gen 2>/dev/null; then
    locale-gen --lang en_US.UTF-8
fi

echo 'Syncing timezone...' 1>&2
# Link the timezone to Chromium OS
# Remove /etc/timezone: this tells Ubuntu/Debian that we are managing the
# content of /etc/localtime manually, and that it should not erase the symbolic
# link upon update, unless "dpkg-reconfigure tzdata" is called explicitly.
rm -f /etc/timezone

# /var/host/timezone/localtime is itself a symbolic link, but as long as the
# zoneinfo packages in the chroot and Chromium OS are the same, it'll be fine
ln -sfT /var/host/timezone/localtime /etc/localtime

# Link /etc/mtab to /proc/mounts. It's not totally accurate, but close enough,
# as it at least has / and all the media-mounted devices.
ln -sfT /proc/mounts /etc/mtab
